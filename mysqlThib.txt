{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 AppleColorEmoji;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Pour compter des entr\'e9es dans une table:\
\
SELECT COUNT(cli_Ville),cli_Ville\
FROM t_clients\
WHERE cli_Ville="London"\
GROUP BY cli_Ville\
\
Pour compter le nombre dans une table/ faire un count sur une table :\
SELECT COUNT(*)\
FROM t_clients\
\
Attention aux valeurs nulles elles ne sont pas prises en consid\'e9ration !!!\
Par exemple SELECT COUNT(cli_contact)\
FROM t_clients\
S\'92il y a une case vide on comptera 91 au lieu de 92 en r\'e9el\
\
Pour avoir un affichage plus correcte on peut faire comme \'e7a :\
SELECT COUNT(*), cli_Fonction\
FROM t_clients\
WHERE cli_Fonction="Acheteur"\
GROUP BY cli_Fonction\
\
LE GROUP By est obligatoire\
\
__\
Si on veut faire deux WHERE il faut un AND. Par exemple:\
WHERE cli_Ville="Bern" AND cli_Pays="Suisse"\
\'97\'97\'97\
Pour afficher deux pays diff\'e9rents:\
SELECT COUNT(*) AS "nombre de clients",cli_Pays AS "Pays"\
FROM t_clients\
WHERE cli_Pays="France" OR cli_Pays="Mexique"\
GROUP BY cli_Pays\
\'97\'97\'97\
Pour afficher les clients qui se trouvent dans des pays qui commencent par A:\
SELECT COUNT(*) AS "nombre de clients",cli_Pays AS "Pays"\
FROM t_clients\
WHERE cli_Pays LIKE "a%"\
GROUP BY cli_Pays\
\'97\'97\'97\
Pour la moyenne:\
SELECT AVG(prod_niv_reapp)\
FROM t_produits\
\'97\'97\'97\'97\
Meme mais commencent par i:\
SELECT AVG(prod_niv_reapp)\
FROM t_produits\
WHERE prod_nom LIKE "i%"\
\
Calculer la somme :\
SELECT SUM(prod_pu)\
FROM t_produits\
-----------\
Pour compter les clients par pays (sup\'e9rieur \'e0 4)\
SELECT COUNT(*), cli_Pays\
FROM t_clients\
GROUP BY cli_Pays\
HAVING COUNT(cli_pays)>4\
-----\
Cr\'e9er des champs calcul\'e9 (page 34 syllabus Bruno Martin)\
SELECT det_num, det_Pu*det_Qte AS "Total"\
FROM t_Detcom\
WHERE det_num=10248\
\
------------\
\
EXERCICES PAGE 40\
Ex1\
SELECT *\
FROM pilotes\
\
Ex2\
SELECT PilNom, PilPrenom\
FROM pilotes\
\
Ex3\
SELECT VilID, VilNom\
FROM villes2\
\
Ex4\
SELECT PilSalaire, PilNom\
FROM pilotes\
WHERE PilSalaire>25000\
\
Ex5\
SELECT PilNom\
FROM pilotes\
WHERE PilSalaire BETWEEN 20000 AND 25000\
\
Ex6\
SELECT ModVitesse, ModNom\
FROM modeles\
WHERE ModNom LIKE "b%"\
\
Ex7\
SELECT PilNom\
FROM pilotes\
WHERE PilSalaire IS NULL\
\
Ex8\
SELECT DISTINCT VilNom\
FROM villes\
INNER JOIN vols ON vilID=VolDepartVilID\
\
Ex9\
SELECT PilNom\
FROM pilotes\
INNER JOIN villes ON PilVilID=VilID\
WHERE VilNom ="Paris"\
\
Ex10\
SELECT DISTINCT AviNombreDePlaces, ModNom\
FROM avions\
INNER JOIN modeles ON AviModID=ModID\
WHERE ModNom LIKE "a%"\
\
Ex11 !!!! Attention difficile !!!!
\f1 \uc0\u9888 \u65039 
\f0  \
\
Explications de l'exercice:\
\
Vols au depart de nice qui desservent paris \
\
\
Table vols et villes\
\
Id des vols dont la ville d'arriv\'e9e est paris :\
SELECT VolID \
FROM vols\
INNER JOIN villes ON VilID=VolArriveVilID\
WHERE vilNom="paris"\
\
Voil\'e0 la r\'e9ponse :\
\
SELECT VolID\
FROM vols\
INNER JOIN villes ON VolDepartVilID=VilID\
WHERE vilNom="nice" and VolID IN\
	(\
    SELECT VolID \
    FROM vols\
    INNER JOIN villes ON VilID=VolArriveVilID\
    WHERE vilNom="paris"\
   	)\
\
Le select sup\'e9rieur\
1 8 10 13\
\
Le select inf\'e9rieur\
8 10 14\
\
Donc on r\'e9cup\'e8re les 8 et 10 qui sont les memes dans les deux select\
\
-----------\
\
EX12\
SELECT aviID, modNom\
FROM avions\
INNER JOIN modeles ON AviModID=ModID\
INNER JOIN villes ON AviVilID=VilID\
WHERE AviNombreDePlaces > 250 OR VilNom="paris"\
\
EX13\
SELECT VilNom, VolHeureArrive\
FROM villes\
INNER JOIN vols ON VilID=VolArriveVilID\
WHERE VilNom="paris" AND VolHeureArrive < '15:00:00'\
\
EX14\
SELECT AVG (PilSalaire)\
FROM pilotes\
INNER JOIN villes ON PilVilID=VilID\
WHERE VilNom="paris"\
\
EX15\
SELECT COUNT(volID)\
FROM vols\
INNER JOIN villes ON VilID=VolDepartVilID\
WHERE vilNom="paris"\
\
EX16\
SELECT DISTINCT PilNom, PilPrenom\
FROM pilotes\
INNER JOIN villes ON PilVilID=VilID\
INNER JOIN vols ON VilID=VolDepartVilID\
WHERE VilNom="paris"\
\
//// CORRECTION\
\
SELECT PilNom\
FROM pilotes\
INNER JOIN vols ON PilID=VolPilID\
INNER JOIN villes ON VolDepartVilID=VilID\
WHERE VilNom="Paris"\
\
EX17\
SELECT PilNom\
FROM pilotes\
INNER JOIN vols ON PilID=VolPilID\
INNER JOIN villes ON VolDepartVilID=VilID\
INNER JOIN avions ON VolAviID=AviID\
INNER JOIN modeles ON AviModID=ModID\
WHERE VilNom="paris" AND ModNom LIKE "a%"\
\
EX18\
SELECT AviID\
FROM avions\
INNER JOIN villes ON AviVilID=VilID\
WHERE VilID =\
	(\
    SELECT Vilid\
    FROM villes\
    INNER JOIN avions ON AviVilID=vilID \
    WHERE AviID=3)\
AND AviID < > 3\
\
EX19\
SELECT PilNom, PilSalaire\
FROM pilotes\
WHERE PilSalaire > (\
    SELECT AVG(Pilsalaire)\
    FROM pilotes)\
\
EX20\
SELECT PilSalaire, PilNom\
FROM pilotes\
INNER JOIN villes ON PilVilID=VilID\
WHERE VilNom="nice" AND PilSalaire > (\
    SELECT MAX(Pilsalaire)\
    FROM pilotes\
    INNER JOIN villes ON PilVilID=VilID\
	WHERE VilNom="paris")\
\
EX21\
SELECT PilSalaire, PilNom\
FROM pilotes\
INNER JOIN villes ON PilVilID=VilID\
WHERE VilNom="paris" AND PilSalaire >= (\
    SELECT MAX(Pilsalaire)\
    FROM pilotes\
    INNER JOIN villes ON PilVilID=VilID\
	WHERE VilNom="nice")\
\
EX22\
SELECT Vilnom, PilSalaire\
from villes\
INNER JOIN pilotes ON VilID=PilVilID\
WHERE vilnom AND PilSalaire = \
	(SELECT VilNom, PilSalaire\
     FROM\
\
---------\
Ex22 en attente ..\
\
SELECT PilNom, VilNom\
FROM pilotes\
INNER JOIN villes ON PilVilID=VilID\
WHERE VilNom= (\
    SELECT VilNom\
    FROM villes\
    INNER JOIN pilotes ON VilID=PilVilID\
    WHERE PilNom="TIM")\
\
EX23\
\
SELECT PilNom, VilNom, PilSalaire\
FROM pilotes\
INNER JOIN villes ON PilVilID=VilID\
ORDER BY PilSalaire DESC, PilNom ASC\
\
Ex24\
\
SELECT COUNT(VolPilID), pilnom\
FROM vols\
INNER JOIN pilotes ON VolPilID=PilID\
GROUP BY VolPilID\
\
EX25\
\
OK 
\f1 \uc0\u55357 \u56397 
\f0  \
SELECT COUNT(*), pilnom, VolPilID, AviID, ModNom\
FROM pilotes\
INNER JOIN vols ON PilID=VolPilID\
INNER JOIN avions ON VolAViID=AviID\
INNER JOIN modeles ON AviModID=ModID\
GROUP BY VolPilID, AviID, ModNom\
___\
PAS FINI\
SELECT COUNT(*), pilnom, VolAviID, ModNom\
FROM vols\
\
INNER JOIN pilotes ON VolPilID=PilID\
INNER JOIN modeles ON AviModID=ModID\
GROUP BY VolPilID, VolAviID\
_____\
Autre test\
\
SELECT COUNT(volAviID), pilnom, ModNom\
FROM pilotes\
INNER JOIN vols on PilID=VolPilID\
INNER JOIN avions on VolAviID=AviVilID\
INNER JOIN modeles on AviModID=ModID\
GROUP BY VolPilID, VolAviID, modNom\
____\
ICI SANS LE MODELE\
\
SELECT COUNT(*), pilnom, VolPilID, AviID\
FROM pilotes\
INNER JOIN vols ON PilID=VolPilID\
INNER JOIN avions on VolAViID=AviID\
GROUP BY VolPilID, AviID\
\
EX26\
\
SELECT COUNT(VolPilID), pilnom\
FROM vols\
INNER JOIN pilotes ON VolPilID=PilID\
GROUP BY VolPilID\
HAVING COUNT(VolPilID)>5\
\
Ex27\
\
SELECT COUNT(VolPilID), pilnom\
FROM vols\
INNER JOIN pilotes ON VolPilID=PilID\
GROUP BY VolPilID\
HAVING COUNT(VolPilID)>=5\
\
EX28 \
\
Select AviID \
FROM avions\
LEFT JOIN vols ON AviID=VolAviID\
WHERE isnull(VolID)\
\
Encore des jointures !\
SELECT PilNom, VilNom\
from villes\
INNER JOIN pilotes ON VilID=PilVilID\
\
On aime les jointures\
SELECT PilNom, VilNom\
from villes\
INNER JOIN pilotes ON VilID=PilVilID\
WHERE VilNom = "Nice" OR VilNom = "Paris"\
ORDER BY VilNom, pilNom\
\
Plus facile\
SELECT PilNom, VilNom\
from villes\
INNER JOIN pilotes ON VilID=PilVilID\
WHERE VilNom in ("paris","nice")\
ORDER BY VilNom\
\
Pour la n\'e9gation on met NOT IN\
\
\
Un peu de Right join\
\
SELECT villes3.vilenom \
FROM villes2\
RIGHT JOIN villes3 ON villes3.vilNom=villes2.VilNom\
WHERE isnull(villes2.VilNom)\
\
\
BASE DE DONNEE ECOLE\
\
EX01\
\
SELECT FLOOR(AVG(DATEDIFF("2018-12-20",EtuNaiss)/365.25)) as 'age', EtuSexe\
FROM etudiants\
GROUP BY(EtuSexe)\
\
EX02\
\
SELECT Pronom, CouNom\
FROM professeurs\
INNER JOIN cours ON ProID=CouProID\
WHERE CouNom="Histoire"\
\
EX03\
\
SELECT Etunom, PtsCote, CouNom\
FROM etudiants\
INNER JOIN points ON EtuID=PtsEtuID\
INNER JOIN cours ON PtsCouID=CouID\
WHERE isnull(PtsCote) AND CouNom="Sociologie"\
\
EX04\
\
SELECT CouNom, ProNom\
FROM cours\
INNER JOIN professeurs ON CouProID=ProID\
WHERE ProStatut="AS" OR ProStatut="MCF"\
\
\
EX05\
SELECT EtuNom, EtuPrenom, CouNom, PtsCote\
FROM etudiants\
INNER JOIN points ON EtuID=PtsEtuID\
INNER JOIN cours ON PtsCouID=CouID\
WHERE points.PtsCote\
ORDER BY EtuNom, EtuPrenom ASC\
\
EX06\
\
SELECT PtsCote, CouNom, EtuNom, (FLOOR(DATEDIFF(CURRENT_DATE, EtuNaiss)/365)) AS 'age', EtuSexe\
FROM cours\
INNER JOIN points ON CouID=PtsCouID\
INNER JOIN etudiants ON PtsEtuID=EtuID\
WHERE CouNom="Informatique" AND PtsCote > (\
    SELECT AVG(PtsCote)\
    FROM points\
    GROUP BY(CouNom)\
    )\
\
EX07\
\
SELECT  ProNom as "PROF", ProStatut\
from professeurs\
INNER JOIN cours ON ProID=CouProID\
GROUP BY(CouProID)\
HAVING COUNT(CouProID)>1\
\
EX08\
\
SELECT Counom AS 'Cours',COUNT(etuID) AS "R\'e9ussites"\
FROM cours\
INNER JOIN points ON CouID=PtsCouID\
INNER JOIN etudiants ON PtsEtuID=EtuID\
WHERE PtsCote >=10\
GROUP BY(CouNom)\
\
EX09\
\
SELECT Etunom, EtuPrenom, EtuSexe\
FROM cours\
INNER JOIN points ON CouID=PtsCouID\
INNER JOIN etudiants ON PtsEtuID=EtuID\
WHERE CouNom = "Informatique" AND PtsCote > (\
    SELECT CouNom\
	FROM cours\
	WHERE CouNom = "Math\'e9matique"\
    )\
\
\
\
SELECT Etunom, EtuPrenom, EtuSexe, PtsCote, CouNom\
FROM cours\
INNER JOIN points ON CouID=PtsCouID\
INNER JOIN etudiants ON PtsEtuID=EtuID\
WHERE CouNom = "Informatique" AND PtsCote > (\
    SELECT CouNom\
	FROM cours\
	WHERE CouNom = "Math\'e9matique"\
    )\
\
\
A terminer\
\
///\
\
BONNE VERSION\
\
SELECT etudiants.EtuNom, etudiants.EtuPrenom, etudiants.EtuSexe\
FROM etudiants\
INNER JOIN points ON etudiants.EtuID=points.PtsEtuID\
WHERE points.PtsCouID=4 AND points.PtsCote > \
(\
    SELECT p2.PtsCote\
    FROM points p2\
    WHERE p2.PtsCouID = 3 AND p2.PtsEtuID = etudiants.EtuID\
)\
\
EX 10\
\
SELECT etudiants.EtuNom, cours.CouNom\
from etudiants\
INNER JOIN points ON EtuID=PtsEtuID\
INNER JOIN cours ON PtsCouID=CouID\
WHERE isnull(ptsCote)\
\
EX 11\
\
SELECT CouNom AS 'Nom du cours', proNom AS 'Nom Prof'\
FROM professeurs\
INNER JOIN cours on ProID=CouProID\
INNER JOIN points ON CouID=PtsCouID\
GROUP BY CouNom, proNom\
HAVING AVG(PtsCote) < 10\
\
EX 12\
\
// :)\
\
EX 13\
\
SELECT COUNT(EtuSexe) AS 'Nbr',  EtuSexe AS 'Sexe'\
FROM etudiants\
INNER JOIN points ON EtuID=PtsEtuID\
WHERE PtsCote >= 10 AND EtuSexe ="M"\
GROUP BY EtuSexe\
UNION \
SELECT COUNT(EtuSexe) AS 'Nbr', EtuSexe AS 'See'\
FROM etudiants\
INNER JOIN points ON EtuID=PtsEtuID\
WHERE PtsCote >= 10 AND EtuSexe ="F"\
GROUP BY EtuSexe\
\
// A REFAIRE SANS LE UNION\
\
EX14\
\
SELECT EtuSexe AS 'Sexe', AVG(PtsCote), CouNom\
FROM etudiants\
INNER JOIN points ON EtuID=PtsEtuID\
INNER JOIN cours ON PtsCouID=CouID\
INNER JOIN professeurs ON CouProID=ProID\
WHERE EtuSexe ="M" AND ProNom="Jacquet"\
GROUP BY EtuSexe, CouNom\
UNION \
SELECT EtuSexe AS 'Sexe', AVG(PtsCote), CouNom\
FROM etudiants\
INNER JOIN points ON EtuID=PtsEtuID\
INNER JOIN cours ON PtsCouID=CouID\
INNER JOIN professeurs ON CouProID=ProID\
WHERE EtuSexe ="F" AND ProNom="Jacquet"\
GROUP BY EtuSexe, CouNom\
\
///\
\
\
SELECT AVG(PtsCote), CouNom, EtuSexe\
FROM etudiants\
INNER JOIN points ON EtuID=PtsEtuID\
INNER JOIN cours ON PtsCouID=CouID\
INNER JOIN professeurs ON CouProID=ProID\
WHERE ProNom="Jacquet"\
GROUP BY EtuSexe, CouNom\
}